{"version":3,"sources":["i18n.js"],"names":["React","useCallback","useEffect","useState","I18nManager","Storage","i18n","Localization","TranslationContext","createContext","TranslationProvider","children","translations","locale","setLocale","console","log","fallbacks","forceRTL","isRTL","localized","key","config","t","includes","getLocale","localeJSON","getItem","setItem","value","setAppLocale"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,KAAKC,YAAZ,MAA8B,mBAA9B;AAEA,OAAO,MAAMC,kBAAkB,gBAAGR,KAAK,CAACS,aAAN,CAAoB,EAApB,CAA3B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA+B;AACjE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAACI,YAAY,CAACM,MAAd,CAApC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBT,YAAY,CAACM,MAAO,GAAjD;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBH,MAAO,GAAtC;AAEAP,EAAAA,IAAI,CAACO,MAAL,GAAcA,MAAd;AACAP,EAAAA,IAAI,CAACM,YAAL,GAAoBA,YAApB;AACAN,EAAAA,IAAI,CAACW,SAAL,GAAiB,IAAjB,CATiE,CAUjE;;AACAb,EAAAA,WAAW,CAACc,QAAZ,CAAqBX,YAAY,CAACY,KAAlC;AAEA,QAAMC,SAAS,GAAGnB,WAAW,CAC3B,CAACoB,GAAD,EAAMC,MAAN,KACEhB,IAAI,CAACiB,CAAL,CAAOF,GAAP,EAAY,EAAE,GAAGC,MAAL;AAAaT,IAAAA;AAAb,GAAZ,EAAmCW,QAAnC,CAA4C,SAA5C,IACIH,GADJ,GAEIf,IAAI,CAACiB,CAAL,CAAOF,GAAP,EAAY,EAAE,GAAGC,MAAL;AAAaT,IAAAA;AAAb,GAAZ,CAJqB,EAK3B,CAACA,MAAD,CAL2B,CAA7B;AAQA,QAAMY,SAAS,GAAGxB,WAAW,CAAC,YAAY;AACxC,UAAMyB,UAAU,GAAG,MAAMrB,OAAO,CAACsB,OAAR,CAAgB,QAAhB,CAAzB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CACG,wDAAuDU,UAAW,EADrE,EAFwC,CAMxC;;AACAZ,IAAAA,SAAS,CAACY,UAAU,KAAK,IAAf,GAAsBA,UAAtB,GAAmCnB,YAAY,CAACM,MAAjD,CAAT;AACD,GAR4B,EAQ1B,CAACC,SAAD,CAR0B,CAA7B;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BH,MAAO,EAA/C;AACAR,IAAAA,OAAO,CAACuB,OAAR,CAAgB,QAAhB,EAA0Bf,MAA1B;AACD,GAHQ,EAGN,CAACA,MAAD,CAHM,CAAT;AAKA,QAAMgB,KAAK,GAAG;AACZT,IAAAA,SADY;AAEZU,IAAAA,YAAY,EAAEhB;AAFF,GAAd;AAKA,sBACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEe;AAApC,KACGlB,QADH,CADF;AAKD,CAlDM","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { I18nManager } from 'react-native'\nimport Storage from '@react-native-async-storage/async-storage'\nimport i18n from 'i18n-js'\nimport * as Localization from 'expo-localization'\n\nexport const TranslationContext = React.createContext({})\n\nexport const TranslationProvider = ({ children, translations }) => {\n  const [locale, setLocale] = useState(Localization.locale)\n\n  console.log('setting up translations')\n  console.log(`local locale: ${Localization.locale} `)\n  console.log(`default locale: ${locale} `)\n\n  i18n.locale = locale\n  i18n.translations = translations\n  i18n.fallbacks = true\n  // update layout direction\n  I18nManager.forceRTL(Localization.isRTL)\n\n  const localized = useCallback(\n    (key, config) =>\n      i18n.t(key, { ...config, locale }).includes('missing')\n        ? key\n        : i18n.t(key, { ...config, locale }),\n    [locale],\n  )\n\n  const getLocale = useCallback(async () => {\n    const localeJSON = await Storage.getItem('locale')\n    console.log(\n      `getting locale from storage and writing it to memory ${localeJSON}`,\n    )\n\n    // If we have a locale stored in local storage, that is high priority (it overrides the current device locale)\n    setLocale(localeJSON !== null ? localeJSON : Localization.locale)\n  }, [setLocale])\n\n  useEffect(() => {\n    getLocale()\n  }, [getLocale])\n\n  useEffect(() => {\n    console.log(`write to storage locale: ${locale}`)\n    Storage.setItem('locale', locale)\n  }, [locale])\n\n  const value = {\n    localized,\n    setAppLocale: setLocale,\n  }\n\n  return (\n    <TranslationContext.Provider value={value}>\n      {children}\n    </TranslationContext.Provider>\n  )\n}\n"]}