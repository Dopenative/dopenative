{"version":3,"sources":["index.jsx"],"names":["React","Text","TouchableOpacity","useSpacing","useTrulyNative","dynamicStyles","DNButton","props","containerStyle","textStyle","text","radius","onPress","styles","secondary","shadow","theme","appearance","spacingStyles","containerStyles","DNButtonContainer","borderRadius","button","backgroundColor","colors","primaryBackground","borderColor","primaryForeground","borderWidth","DNButtonShadow","textStyles","DNButtonText","color"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,cAAvC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,aAAP,MAA0B,UAA1B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,MARI;AASJC,IAAAA,KATI;AAUJC,IAAAA;AAVI,MAWFV,KAXJ;AAYA,QAAMW,aAAa,GAAGf,UAAU,CAACI,KAAD,CAAhC;AACA,QAAMY,eAAe,GAAG,CACtBN,MAAM,CAACO,iBADe,EAEtB;AAAEC,IAAAA,YAAY,EAAEV,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAYK,KAAK,CAACM,MAAN,CAAaD;AAAvC,GAFsB,EAGtBP,SAAS,IAAI;AACXS,IAAAA,eAAe,EAAEP,KAAK,CAACQ,MAAN,CAAaP,UAAb,EAAyBQ,iBAD/B;AAEXC,IAAAA,WAAW,EAAEV,KAAK,CAACQ,MAAN,CAAaP,UAAb,EAAyBU,iBAF3B;AAGXC,IAAAA,WAAW,EAAE;AAHF,GAHS,EAQtB,GAAGV,aARmB,EAStBH,MAAM,IAAIF,MAAM,CAACgB,cATK,EAUtBrB,cAVsB,CAAxB;AAaA,QAAMsB,UAAU,GAAG,CACjBjB,MAAM,CAACkB,YADU,EAEjBjB,SAAS,IAAI;AAAEkB,IAAAA,KAAK,EAAEhB,KAAK,CAACQ,MAAN,CAAaP,UAAb,EAAyBU;AAAlC,GAFI,EAGjBlB,SAHiB,CAAnB;AAMA,sBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEU,eAAzB;AAA0C,IAAA,OAAO,EAAEP;AAAnD,KACGF,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB;AAAb,KAA0BpB,IAA1B,CADX,CADF;AAKD,CAtCD;;AAwCA,eAAeN,cAAc,CAACE,QAAD,EAAWD,aAAX,CAA7B","sourcesContent":["import React from 'react'\nimport { Text, TouchableOpacity } from 'react-native'\nimport { useSpacing } from '../../hooks/useSpacing'\nimport { useTrulyNative } from '../../theming'\nimport dynamicStyles from './styles'\n\nconst DNButton = props => {\n  const {\n    containerStyle,\n    textStyle,\n    text,\n    radius,\n    onPress,\n    styles,\n    secondary,\n    shadow,\n    theme,\n    appearance,\n  } = props\n  const spacingStyles = useSpacing(props)\n  const containerStyles = [\n    styles.DNButtonContainer,\n    { borderRadius: radius ?? theme.button.borderRadius },\n    secondary && {\n      backgroundColor: theme.colors[appearance].primaryBackground,\n      borderColor: theme.colors[appearance].primaryForeground,\n      borderWidth: 1,\n    },\n    ...spacingStyles,\n    shadow && styles.DNButtonShadow,\n    containerStyle,\n  ]\n\n  const textStyles = [\n    styles.DNButtonText,\n    secondary && { color: theme.colors[appearance].primaryForeground },\n    textStyle,\n  ]\n\n  return (\n    <TouchableOpacity style={containerStyles} onPress={onPress}>\n      {text && <Text style={textStyles}>{text}</Text>}\n    </TouchableOpacity>\n  )\n}\n\nexport default useTrulyNative(DNButton, dynamicStyles)\n"]}