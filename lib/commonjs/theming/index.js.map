{"version":3,"sources":["index.jsx"],"names":["DNDefaultTheme","DNContext","React","createContext","defaultProps","children","theme","DNProvider","props","colorScheme","overridenTheme","context","appearance","useTrulyNative","Component","styles","extendTheme","useTheme","useContext"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;eAEeA,iB;;;AAER,MAAMC,SAAS,gBAAGC,eAAMC,aAAN,EAAlB;;;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKO,SAASC,UAAT,GAA0C;AAAA,MAAtBC,KAAsB,uEAAdJ,YAAc;AAC/C,QAAM;AAAEE,IAAAA,KAAF;AAASD,IAAAA;AAAT,MAAsBG,KAA5B;AACA,QAAMC,WAAW,GAAG,4CAApB;AACA,QAAMC,cAAc,GAAG,EAAE,GAAGV,iBAAL;AAAqB,OAAGM;AAAxB,GAAvB;AACA,QAAMK,OAAO,GAAG;AACdL,IAAAA,KAAK,EAAEI,cADO;AAEdE,IAAAA,UAAU,EAAEH;AAFE,GAAhB;AAIA,sBAAO,6BAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEE;AAA3B,KAAqCN,QAArC,CAAP;AACD;;AAEM,SAASQ,cAAT,CAAwBC,SAAxB,EAAmCC,MAAnC,EAA2C;AAChD,SAAOP,KAAK,IAAI;AACd,UAAMC,WAAW,GAAG,4CAApB;AACA,wBACE,6BAAC,SAAD,CAAW,QAAX,QACGE,OAAO,iBACN,6BAAC,SAAD,eACMH,KADN;AAEE,MAAA,KAAK,EAAE,EAAE,GAAGR,iBAAL;AAAqB,WAAGW,OAAO,CAACL;AAAhC,OAFT;AAGE,MAAA,UAAU,EAAEG,WAAW,IAAIE,OAAO,CAACC,UAHrC;AAIE,MAAA,MAAM,EACJG,MAAM,IACNA,MAAM,CACJ,EAAE,GAAGf,iBAAL;AAAqB,WAAGW,OAAO,CAACL;AAAhC,OADI,EAEJK,OAAO,CAACC,UAFJ;AANV,OAFJ,CADF;AAkBD,GApBD;AAqBD;;AAEM,SAASI,WAAT,CAAqBV,KAArB,EAA4B;AACjC,SAAO,EAAE,GAAGN,iBAAL;AAAqB,OAAGM;AAAxB,GAAP;AACD;;AAEM,SAASW,QAAT,GAAoB;AACzB,SAAOf,eAAMgB,UAAN,CAAiBjB,SAAjB,CAAP;AACD","sourcesContent":["import React from 'react'\nimport DNDefaultTheme from './default'\nimport { useColorScheme } from 'react-native-appearance'\n\nexport default DNDefaultTheme\n\nexport const DNContext = React.createContext()\n\nconst defaultProps = {\n  children: null,\n  theme: {},\n}\n\nexport function DNProvider(props = defaultProps) {\n  const { theme, children } = props\n  const colorScheme = useColorScheme()\n  const overridenTheme = { ...DNDefaultTheme, ...theme }\n  const context = {\n    theme: overridenTheme,\n    appearance: colorScheme,\n  }\n  return <DNContext.Provider value={context}>{children}</DNContext.Provider>\n}\n\nexport function useTrulyNative(Component, styles) {\n  return props => {\n    const colorScheme = useColorScheme()\n    return (\n      <DNContext.Consumer>\n        {context => (\n          <Component\n            {...props}\n            theme={{ ...DNDefaultTheme, ...context.theme }}\n            appearance={colorScheme || context.appearance}\n            styles={\n              styles &&\n              styles(\n                { ...DNDefaultTheme, ...context.theme },\n                context.appearance,\n              )\n            }\n          />\n        )}\n      </DNContext.Consumer>\n    )\n  }\n}\n\nexport function extendTheme(theme) {\n  return { ...DNDefaultTheme, ...theme }\n}\n\nexport function useTheme() {\n  return React.useContext(DNContext)\n}\n"]}